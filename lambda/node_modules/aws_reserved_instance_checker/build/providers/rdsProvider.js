"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var aws_sdk_1 = require("aws-sdk");
var resourceType_1 = require("../providers/resourceType");
require("../models/instanceData");
require("../models/reservedInstanceData");
var RDSProvider = (function () {
    function RDSProvider(region) {
        this.region = region;
        this.ResourceType = resourceType_1.ResourceType.RDS;
    }
    RDSProvider.prototype.describeActiveReservedInstances = function () {
        var rds = new aws_sdk_1.RDS({ region: this.region });
        var params = {};
        return new Promise(function (resolve, reject) {
            rds.describeReservedDBInstances(params, function (err, data) {
                if (err) {
                    reject(err);
                    return;
                }
                if (data.ReservedDBInstances) {
                    var reservedInstances = data.ReservedDBInstances
                        .filter(function (dbInstance) { return dbInstance.State === 'active'; })
                        .map(function (dbInstance) {
                        var reservedInstance = {
                            AvailabilityZone: '',
                            InstanceType: dbInstance.DBInstanceClass,
                            InstanceCount: dbInstance.DBInstanceCount,
                            CompareKey: "MultiAZ-" + dbInstance.MultiAZ
                        };
                        return reservedInstance;
                    });
                    resolve(reservedInstances);
                    return;
                }
                resolve([]);
            });
        });
    };
    RDSProvider.prototype.describeRunningInstances = function () {
        var rds = new aws_sdk_1.RDS({ region: this.region });
        var params = {};
        return new Promise(function (resolve, reject) {
            rds.describeDBInstances(params, function (err, data) {
                if (err) {
                    reject(err);
                    return;
                }
                if (data.DBInstances) {
                    var result = data.DBInstances
                        .filter(function (dbInstance) { return dbInstance.DBInstanceStatus === 'available'; })
                        .map(function (dbInstance) {
                        var instanceData = {
                            GroupKey: dbInstance.DBInstanceClass + " " + (dbInstance.MultiAZ ? 'with' : 'without') + " MultiAZ",
                            InstanceId: dbInstance.DbiResourceId,
                            InstanceType: dbInstance.DBInstanceClass,
                            LaunchTime: dbInstance.InstanceCreateTime,
                            AvailabilityZone: '',
                            InstanceName: dbInstance.DBInstanceIdentifier,
                            CompareKey: "MultiAZ-" + dbInstance.MultiAZ
                        };
                        return instanceData;
                    })
                        .filter(function (instance) { return !!instance; });
                    resolve(result);
                    return;
                }
                resolve([]);
            });
        });
    };
    RDSProvider.prototype.getInstancesUrl = function (instances) {
        if (instances.length === 0) {
            return undefined;
        }
        var result = "<https://" + this.region + ".console.aws.amazon.com/rds/home?region=" + this.region + "|Click to details>";
        return result;
    };
    return RDSProvider;
}());
exports.default = RDSProvider;
