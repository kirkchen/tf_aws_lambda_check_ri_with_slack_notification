"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var aws_sdk_1 = require("aws-sdk");
var resourceType_1 = require("../providers/resourceType");
require("../models/instanceData");
require("../models/reservedInstanceData");
var EC2Provider = (function () {
    function EC2Provider(region) {
        this.region = region;
        this.ResourceType = resourceType_1.ResourceType.EC2;
    }
    EC2Provider.prototype.describeActiveReservedInstances = function () {
        var ec2 = new aws_sdk_1.EC2({ region: this.region });
        var params = {
            Filters: [
                {
                    Name: 'state',
                    Values: [
                        'active'
                    ]
                }
            ]
        };
        return new Promise(function (resolve, reject) {
            ec2.describeReservedInstances(params, function (err, data) {
                if (err) {
                    reject(err);
                    return;
                }
                if (data.ReservedInstances) {
                    data.ReservedInstances.forEach(function (i) { return i.CompareKey = i.InstanceType; });
                    resolve(data.ReservedInstances);
                    return;
                }
                resolve([]);
            });
        });
    };
    EC2Provider.prototype.describeRunningInstances = function () {
        var ec2 = new aws_sdk_1.EC2({ region: this.region });
        var params = {
            Filters: [
                {
                    Name: 'instance-state-name',
                    Values: [
                        'running'
                    ]
                }
            ]
        };
        return new Promise(function (resolve, reject) {
            ec2.describeInstances(params, function (err, data) {
                if (err) {
                    reject(err);
                    return;
                }
                if (data.Reservations) {
                    var result = data.Reservations
                        .map(function (reservation) {
                        if (reservation.Instances &&
                            reservation.Instances[0].Placement) {
                            var instance = reservation.Instances[0];
                            var availabilityZone = void 0;
                            if (instance.Placement) {
                                availabilityZone = instance.Placement.AvailabilityZone;
                            }
                            var instanceName = void 0;
                            if (instance.Tags) {
                                for (var _i = 0, _a = instance.Tags; _i < _a.length; _i++) {
                                    var tag = _a[_i];
                                    if (tag.Key === 'Name') {
                                        instanceName = tag.Value;
                                        break;
                                    }
                                }
                            }
                            var instanceData = {
                                GroupKey: instance.InstanceType + " @ " + availabilityZone,
                                InstanceId: instance.InstanceId,
                                InstanceType: instance.InstanceType,
                                LaunchTime: instance.LaunchTime,
                                AvailabilityZone: availabilityZone,
                                InstanceName: instanceName,
                                CompareKey: instance.InstanceType
                            };
                            return instanceData;
                        }
                    })
                        .filter(function (instance) { return !!instance; });
                    resolve(result);
                    return;
                }
                resolve([]);
            });
        });
    };
    EC2Provider.prototype.getInstancesUrl = function (instanceDatas) {
        if (instanceDatas.length === 0) {
            return undefined;
        }
        var ids = instanceDatas.map(function (instance) { return instance.InstanceId; }).join(',');
        var result = "<https://" + this.region + ".console.aws.amazon.com/ec2/v2/home?region=" + this.region + "#Instances:instanceId=" + ids + ";sort=instanceId|Click to details>";
        return result;
    };
    return EC2Provider;
}());
exports.default = EC2Provider;
