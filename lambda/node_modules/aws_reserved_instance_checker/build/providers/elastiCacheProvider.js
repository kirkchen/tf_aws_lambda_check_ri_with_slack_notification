"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var aws_sdk_1 = require("aws-sdk");
var resourceType_1 = require("../providers/resourceType");
require("../models/instanceData");
require("../models/reservedInstanceData");
var ElastiCacheProvider = (function () {
    function ElastiCacheProvider(region) {
        this.region = region;
        this.ResourceType = resourceType_1.ResourceType.ElastiCache;
    }
    ElastiCacheProvider.prototype.describeActiveReservedInstances = function () {
        var ec2 = new aws_sdk_1.ElastiCache({ region: this.region });
        var params = {};
        return new Promise(function (resolve, reject) {
            ec2.describeReservedCacheNodes(params, function (err, data) {
                if (err) {
                    reject(err);
                    return;
                }
                if (data.ReservedCacheNodes) {
                    var reservedNodes = data.ReservedCacheNodes
                        .filter(function (cacheNode) { return cacheNode.State === 'active'; })
                        .map(function (cacheNode) {
                        var node = {
                            AvailabilityZone: '',
                            InstanceCount: cacheNode.CacheNodeCount,
                            InstanceType: cacheNode.CacheNodeType
                        };
                        return node;
                    });
                    resolve(reservedNodes);
                    return;
                }
                resolve([]);
            });
        });
    };
    ElastiCacheProvider.prototype.describeRunningInstances = function () {
        var elastiCache = new aws_sdk_1.ElastiCache({ region: this.region });
        var params = {};
        return new Promise(function (resolve, reject) {
            elastiCache.describeCacheClusters(params, function (err, data) {
                if (err) {
                    reject(err);
                    return;
                }
                if (data.CacheClusters) {
                    var result = data.CacheClusters
                        .map(function (cacheCluster) {
                        var instanceData = {
                            GroupKey: "" + cacheCluster.CacheNodeType,
                            InstanceId: cacheCluster.CacheClusterId,
                            InstanceType: cacheCluster.CacheNodeType,
                            LaunchTime: cacheCluster.CacheClusterCreateTime,
                            AvailabilityZone: '',
                            InstanceName: cacheCluster.CacheClusterId
                        };
                        return instanceData;
                    })
                        .filter(function (instance) { return !!instance; });
                    resolve(result);
                    return;
                }
                resolve([]);
            });
        });
    };
    ElastiCacheProvider.prototype.getInstancesUrl = function (instanceDatas) {
        if (instanceDatas.length === 0) {
            return undefined;
        }
        var result = "<https://" + this.region + ".console.aws.amazon.com/elasticache/home?region=" + this.region + "|Click to details>";
        return result;
    };
    return ElastiCacheProvider;
}());
exports.default = ElastiCacheProvider;
